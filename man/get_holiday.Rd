% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_holiday.R
\name{get_holiday}
\alias{get_holiday}
\title{Get the non-workdays or workdays}
\usage{
get_holiday(
  year,
  type = "workday",
  exclude_trapped_days = FALSE,
  output = "selected"
)
}
\arguments{
\item{year}{[\code{integer(1)}]\cr
Year.}

\item{type}{[\code{character(1)}]\cr
The type of non_workday or workday, see details. Defaults to "workday".}

\item{exclude_trapped_days}{[\code{character} | \code{logical(1)}]\cr
Should trapped days and common days off be excluded from workday?,
see details. Defaults to \code{FALSE}.}

\item{output}{[\code{character(1)}]\cr
The output format of the data frame, see details. Defaults
to "selected".}
}
\value{
data frame with the selected dates.
}
\description{
Get the non-workdays or workdays within one year.
   The function is intended for use when planning sampling to
   excluded days or weeks from the sampling plan.
}
\details{
\code{type} is used to select the type of non-workday or
   workday. Valid input are one of c("non_workday", "sat_to_sun",
   "public_holiday", "workday"). public_holiday are the non-moveable
   holidays, Easter and Pentacost; sat_to_sun are Saturdays and
   Sundays; and non_workday are public_holiday and sat_to_sun combined.
   workday is the opposite of non_workday when
   \code{exclude_trapped_days} = \code{FALSE}.

\code{exclude_trapped_days} is used to exclude trapped days
   and other days that many often takes a day off, i.e. the
   Easter week and the Christmas week. It is only Valid for
   workday and has no effect on the other types. Input
   "trapped" or \code{TRUE} will exclude trapped days,
   "easter" will exclude Monday to Wednesday before Thursday
   and "xmas" will exclude the days in the week of Christmas
   eve until New years eve.

   The output is a data frame with the selected dates and the
   day_of_week (integer) when \code{output} = "selected". When
   \code{output} = "raw" the data frame includes all dates and
   the additional columns c("non_workday", "sat_to_sun", "public_holiday",
   "workday", "trapped" and "public"), see below for description.

   The output data frame for \code{output} = "raw":
\tabular{lll}{
   \strong{Column name} \tab \strong{Format} \tab \strong{Description} \cr
   date \tab date \tab Date. \cr
   day_of_week \tab integer \tab Week day number, Monday = 1, Sunday = 7. \cr
   sat_to_sun \tab integer \tab Saturday and Sunday = 1, otherwise 0. \cr
   public_holiday \tab integer \tab Public holidays = 1 otherwise = 0. \cr
   non_workday \tab integer \tab Saturday, Sunday and public holidays = 1, otherwise = 0. \cr
   workday \tab integer \tab Workday, the opposite of non-workday when \code{exclude_trapped_days} = \code{FALSE}. \cr
   public \tab character \tab Easter = "e", Pentacost = "p", non-moveable = "n", otherwise NA. \cr
   trapped \tab character \tab trapped days (t), Easter week days (e) and/or Xmas week days (x) otherwise NA. \cr
}

 When \code{output} %in% c("fhi", "cstime") the data frame is
   formatted as the table cstime::nor_workdays_by_date
   created by National Public Health Institute (FHI).

The function is limited to years from 1968, as before 1968
   Saturday was a normal workday in Norway. Be aware that
   Saturday was a normal school day in Norway until and including
   1972.
}
\examples{
# Selects the public holidays
 public_holidays <- get_holiday(year = 2024,
                                type = "public_holiday")

# Selects workdays except the trapped days
 workdays <- get_holiday(year = 2024,
                         type = "workday",
                         exclude_trapped_days = TRUE)

# Selects workdays except days in Easter and Christmas week
 workdays <- get_holiday(year = 2024,
                         type = "workday",
                         exclude_trapped_days = c("easter", "xmas"))

}
\author{
Petter Hopp Petter.Hopp@vetinst.no
}
